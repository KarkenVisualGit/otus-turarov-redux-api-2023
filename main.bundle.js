(()=>{"use strict";var n={982:(n,t,e)=>{e.d(t,{Z:()=>c});var r=e(537),o=e.n(r),a=e(645),i=e.n(a)()(o());i.push([n.id,"body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f4f4f4;\n}\n\n#product-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 20px;\n}\n\n.add-to-cart {\n  font-size: 12px;\n}\n\n.product {\n  background-color: #fff;\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n}\n\n.product button {\n  background-color: #5cb85c;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.product button:hover {\n  background-color: #4cae4c;\n}\n\n#cart {\n  background-color: #fff;\n  margin: 20px auto;\n  width: 80%;\n  padding: 20px;\n  border: 1px solid #ddd;\n}\n\n.cart-title {\n  text-align: center;\n  color: #333;\n  font-size: 24px;\n  margin-top: 20px;\n}\n\n.remove-from-cart {\n  background-color: #d9534f;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.remove-from-cart:hover {\n  background-color: #c9302c;\n}\n\n.product-quantity {\n  padding: 5px;\n  width: 50px;\n}\n","",{version:3,sources:["webpack://./src/style/style.css"],names:[],mappings:"AAAA;EACE,8BAA8B;EAC9B,SAAS;EACT,UAAU;EACV,yBAAyB;AAC3B;;AAEA;EACE,aAAa;EACb,eAAe;EACf,uBAAuB;EACvB,aAAa;AACf;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,sBAAsB;EACtB,sBAAsB;EACtB,aAAa;EACb,YAAY;EACZ,kBAAkB;AACpB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,kBAAkB;EAClB,yBAAyB;EACzB,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,sBAAsB;EACtB,iBAAiB;EACjB,UAAU;EACV,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,eAAe;EACf,gBAAgB;AAClB;;AAEA;EACE,yBAAyB;EACzB,YAAY;EACZ,YAAY;EACZ,iBAAiB;EACjB,eAAe;EACf,sCAAsC;AACxC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,YAAY;EACZ,WAAW;AACb",sourcesContent:["body {\n  font-family: Arial, sans-serif;\n  margin: 0;\n  padding: 0;\n  background-color: #f4f4f4;\n}\n\n#product-list {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  padding: 20px;\n}\n\n.add-to-cart {\n  font-size: 12px;\n}\n\n.product {\n  background-color: #fff;\n  border: 1px solid #ddd;\n  padding: 10px;\n  margin: 10px;\n  text-align: center;\n}\n\n.product button {\n  background-color: #5cb85c;\n  color: white;\n  border: none;\n  padding: 10px 20px;\n  text-transform: uppercase;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.product button:hover {\n  background-color: #4cae4c;\n}\n\n#cart {\n  background-color: #fff;\n  margin: 20px auto;\n  width: 80%;\n  padding: 20px;\n  border: 1px solid #ddd;\n}\n\n.cart-title {\n  text-align: center;\n  color: #333;\n  font-size: 24px;\n  margin-top: 20px;\n}\n\n.remove-from-cart {\n  background-color: #d9534f;\n  color: white;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  transition: background-color 0.3s ease;\n}\n\n.remove-from-cart:hover {\n  background-color: #c9302c;\n}\n\n.product-quantity {\n  padding: 5px;\n  width: 50px;\n}\n"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var t=[];return t.toString=function(){return this.map((function(t){var e="",r=void 0!==t[5];return t[4]&&(e+="@supports (".concat(t[4],") {")),t[2]&&(e+="@media ".concat(t[2]," {")),r&&(e+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),e+=n(t),r&&(e+="}"),t[2]&&(e+="}"),t[4]&&(e+="}"),e})).join("")},t.i=function(n,e,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var A=[].concat(n[d]);r&&i[A[0]]||(void 0!==a&&(void 0===A[5]||(A[1]="@layer".concat(A[5].length>0?" ".concat(A[5]):""," {").concat(A[1],"}")),A[5]=a),e&&(A[2]?(A[1]="@media ".concat(A[2]," {").concat(A[1],"}"),A[2]=e):A[2]=e),o&&(A[4]?(A[1]="@supports (".concat(A[4],") {").concat(A[1],"}"),A[4]=o):A[4]="".concat(o)),t.push(A))}},t}},537:n=>{n.exports=function(n){var t=n[1],e=n[3];if(!e)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(e)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[t].concat([a]).join("\n")}return[t].join("\n")}},379:n=>{var t=[];function e(n){for(var e=-1,r=0;r<t.length;r++)if(t[r].identifier===n){e=r;break}return e}function r(n,r){for(var a={},i=[],c=0;c<n.length;c++){var s=n[c],d=r.base?s[0]+r.base:s[0],A=a[d]||0,u="".concat(d," ").concat(A);a[d]=A+1;var p=e(u),l={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)t[p].references++,t[p].updater(l);else{var f=o(l,r);r.byIndex=c,t.splice(c,0,{identifier:u,updater:f,references:1})}i.push(u)}return i}function o(n,t){var e=t.domAPI(t);return e.update(n),function(t){if(t){if(t.css===n.css&&t.media===n.media&&t.sourceMap===n.sourceMap&&t.supports===n.supports&&t.layer===n.layer)return;e.update(n=t)}else e.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=e(a[i]);t[c].references--}for(var s=r(n,o),d=0;d<a.length;d++){var A=e(a[d]);0===t[A].references&&(t[A].updater(),t.splice(A,1))}a=s}}},569:n=>{var t={};n.exports=function(n,e){var r=function(n){if(void 0===t[n]){var e=document.querySelector(n);if(window.HTMLIFrameElement&&e instanceof window.HTMLIFrameElement)try{e=e.contentDocument.head}catch(n){e=null}t[n]=e}return t[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(e)}},216:n=>{n.exports=function(n){var t=document.createElement("style");return n.setAttributes(t,n.attributes),n.insert(t,n.options),t}},565:(n,t,e)=>{n.exports=function(n){var t=e.nc;t&&n.setAttribute("nonce",t)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var t=n.insertStyleElement(n);return{update:function(e){!function(n,t,e){var r="";e.supports&&(r+="@supports (".concat(e.supports,") {")),e.media&&(r+="@media ".concat(e.media," {"));var o=void 0!==e.layer;o&&(r+="@layer".concat(e.layer.length>0?" ".concat(e.layer):""," {")),r+=e.css,o&&(r+="}"),e.media&&(r+="}"),e.supports&&(r+="}");var a=e.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),t.styleTagTransform(r,n,t.options)}(t,n,e)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(t)}}}},589:n=>{n.exports=function(n,t){if(t.styleSheet)t.styleSheet.cssText=n;else{for(;t.firstChild;)t.removeChild(t.firstChild);t.appendChild(document.createTextNode(n))}}}},t={};function e(r){var o=t[r];if(void 0!==o)return o.exports;var a=t[r]={id:r,exports:{}};return n[r](a,a.exports,e),a.exports}e.n=n=>{var t=n&&n.__esModule?()=>n.default:()=>n;return e.d(t,{a:t}),t},e.d=(n,t)=>{for(var r in t)e.o(t,r)&&!e.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:t[r]})},e.o=(n,t)=>Object.prototype.hasOwnProperty.call(n,t),e.nc=void 0,(()=>{let n=function(n){return n.ADD_TO_CART="ADD_TO_CART",n.REMOVE_FROM_CART="REMOVE_FROM_CART",n.SELECT_PRODUCT="SELECT_PRODUCT",n.UPDATE_QUANTITY="UPDATE_QUANTITY",n}({});const t=n;var r=e(379),o=e.n(r),a=e(795),i=e.n(a),c=e(569),s=e.n(c),d=e(565),A=e.n(d),u=e(216),p=e.n(u),l=e(589),f=e.n(l),E=e(982),m={};m.styleTagTransform=f(),m.setAttributes=A(),m.insert=s().bind(null,"head"),m.domAPI=i(),m.insertStyleElement=p(),o()(E.Z,m),E.Z&&E.Z.locals&&E.Z.locals;const y=(C={cart:(n={items:[]},e)=>{switch(e.type){case t.ADD_TO_CART:{const t=n.items.findIndex((n=>n.id===e.payload.id));return-1!==t?{...n,items:n.items.map(((n,e)=>e===t?{...n,quantity:n.quantity+1}:n))}:{...n,items:[...n.items,{...e.payload,quantity:1}]}}case t.REMOVE_FROM_CART:return{...n,items:n.items.filter((n=>n.id!==e.payload))};case t.UPDATE_QUANTITY:return{...n,items:n.items.map((n=>n.id===e.payload.id?{...n,quantity:e.payload.quantity}:n))};case t.SELECT_PRODUCT:return{...n,items:n.items.map((n=>n.id===e.payload?{...n,isSelected:!0}:{...n,isSelected:!1}))};default:return n}}},(n={cart:{items:[]}},t)=>Object.keys(C).reduce(((e,r)=>({...e,[r]:(0,C[r])(n[r],t)})),{}));var C;const v=new class{listeners=[];constructor(n,t={cart:{items:[]}},e=[]){this.reducer=n,this.state=t,this.middlewares=e}getState(){return this.state}dispatch(n){const t=this.middlewares.map((n=>n(this)));let e=this.rawDispatch.bind(this);t.reverse().forEach((n=>{e=n(e)})),e(n)}rawDispatch(n){this.state=this.reducer(this.state,n),this.listeners.forEach((n=>n()))}subscribe(n){return this.listeners.push(n),()=>{this.listeners=this.listeners.filter((t=>t!==n))}}}(y,{cart:{items:[{id:"123",name:"Product 1",quantity:2}]}},[n=>n=>t=>{if("REMOVE_FROM_CART"!==t.type||window.confirm("Вы уверены, что хотите удалить этот товар из корзины?"))return n(t)},n=>t=>e=>{console.log("dispatching",e);const r=t(e);return console.log("next state",n.getState()),r}]);function g(t){const e=document.getElementById("cart");e&&(e.innerHTML="",t.getState().cart.items.forEach((n=>{const t=document.createElement("div");t.innerHTML=`\n          <span>${n.name}</span>\n          <button class="remove-from-cart" data-id="${n.id}">Удалить</button>\n          <input type="number" value="${n.quantity}" \n            data-id="${n.id}" class="product-quantity">\n      `,e.appendChild(t)})),function(t){document.querySelectorAll(".remove-from-cart").forEach((e=>{e.addEventListener("click",(e=>{const r=e.target.dataset.id;var o;r?t.dispatch((o=r,{type:n.REMOVE_FROM_CART,payload:o})):console.error("Product ID is undefined")}))})),document.querySelectorAll(".product-quantity").forEach((e=>{const r=e;let o=r.value;r.addEventListener("focus",(()=>{o=r.value})),r.addEventListener("change",(e=>{const r=e.target,a=r.dataset.id,i=parseInt(r.value,10);var c,s;!a||i<=0?r.value=o:t.dispatch((c=a,s=i,{type:n.UPDATE_QUANTITY,payload:{id:c,quantity:s}}))}))}))}(v))}var h;v.subscribe((()=>{g(v)})),h=v,document.querySelectorAll(".add-to-cart").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target;if(e.parentElement){const t=e.parentElement.dataset.id;t?h.dispatch((r={id:t,name:`Товар ${t}`,quantity:1},{type:n.ADD_TO_CART,payload:r})):console.error("Product ID is undefined")}var r}))})),g(v)})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,